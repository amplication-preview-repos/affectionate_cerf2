datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Session {
  createdAt   DateTime           @default(now())
  endTime     DateTime?
  id          String             @id @default(cuid())
  proctorings Proctoring[]
  startTime   DateTime?
  status      EnumSessionStatus?
  updatedAt   DateTime           @updatedAt
  user        User?              @relation(fields: [userId], references: [id])
  userId      String?
}

model Exam {
  createdAt   DateTime  @default(now())
  date        DateTime?
  description String?
  id          String    @id @default(cuid())
  title       String?
  updatedAt   DateTime  @updatedAt
}

model Proctoring {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  notes     String?
  session   Session? @relation(fields: [sessionId], references: [id])
  sessionId String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  createdAt   DateTime      @default(now())
  email       String?       @unique
  firstName   String?
  id          String        @id @default(cuid())
  lastName    String?
  password    String
  proctorings Proctoring[]
  role        EnumUserRole?
  roles       Json
  sessions    Session[]
  updatedAt   DateTime      @updatedAt
  username    String        @unique
}

enum EnumSessionStatus {
  Option1
}

enum EnumUserRole {
  Option1
}
